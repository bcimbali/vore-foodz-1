{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/BrettCimbalik/code/vore-foodz-1/components/query.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\n\nvar Query = function Query(_ref) {\n  _s();\n\n  var children = _ref.children,\n      query = _ref.query,\n      id = _ref.id;\n\n  var _useQuery = useQuery(query, {\n    variables: {\n      id: id\n    }\n  }),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error;\n\n  if (loading) return __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n  if (error) return __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 21\n    }\n  }, \"Error: \", JSON.stringify(error));\n  return children({\n    data: data\n  });\n};\n\n_s(Query, \"tP+6C5plfRwxqCbBj3cMUcL7Opk=\", false, function () {\n  return [useQuery];\n});\n\n_c = Query;\nexport default Query;\n\nvar _c;\n\n$RefreshReg$(_c, \"Query\");","map":{"version":3,"sources":["/Users/BrettCimbalik/code/vore-foodz-1/components/query.js"],"names":["React","useQuery","Query","children","query","id","variables","data","loading","error","JSON","stringify"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,qBAAzB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAA6B;AAAA;;AAAA,MAA1BC,QAA0B,QAA1BA,QAA0B;AAAA,MAAhBC,KAAgB,QAAhBA,KAAgB;AAAA,MAATC,EAAS,QAATA,EAAS;;AAAA,kBACRJ,QAAQ,CAACG,KAAD,EAAQ;AAC/CE,IAAAA,SAAS,EAAE;AAAED,MAAAA,EAAE,EAAEA;AAAN;AADoC,GAAR,CADA;AAAA,MACjCE,IADiC,aACjCA,IADiC;AAAA,MAC3BC,OAD2B,aAC3BA,OAD2B;AAAA,MAClBC,KADkB,aAClBA,KADkB;;AAKzC,MAAID,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,MAAIC,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAWC,IAAI,CAACC,SAAL,CAAeF,KAAf,CAAX,CAAP;AACX,SAAON,QAAQ,CAAC;AAAEI,IAAAA,IAAI,EAAJA;AAAF,GAAD,CAAf;AACD,CARD;;GAAML,K;UAC6BD,Q;;;KAD7BC,K;AAUN,eAAeA,KAAf","sourcesContent":["import React from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\n\nconst Query = ({ children, query, id }) => {\n  const { data, loading, error } = useQuery(query, {\n    variables: { id: id }\n  });\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error: {JSON.stringify(error)}</p>;\n  return children({ data });\n};\n\nexport default Query;\n"]},"metadata":{},"sourceType":"module"}